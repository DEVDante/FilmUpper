  FilmUpperController.cpp
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\algorithm(1065): warning C4996: 'std::transform::_Unchecked_iterators::_Deprecate': Call to 'std::transform' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\algorithm(1064): note: see declaration of 'std::transform::_Unchecked_iterators::_Deprecate'
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost\multi_array.hpp(419): note: see reference to function template instantiation '_OutIt *std::transform<unsigned __int64*,unsigned __int64*,unsigned __int64*,const unsigned __int64&(__cdecl *)(const unsigned __int64 &,const unsigned __int64 &)>(_InIt1,_InIt1,_InIt2,_OutIt,_Fn2)' being compiled
          with
          [
              _OutIt=unsigned __int64 *,
              _InIt1=unsigned __int64 *,
              _InIt2=unsigned __int64 *,
              _Fn2=const unsigned __int64 &(__cdecl *)(const unsigned __int64 &,const unsigned __int64 &)
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost\multi_array.hpp(402): note: while compiling class template member function 'boost::multi_array<QColor *,2,std::allocator<T>> &boost::multi_array<T,2,std::allocator<T>>::resize(const boost::detail::multi_array::extent_gen<2> &)'
          with
          [
              T=QColor *
          ]
  d:\studia\inzynierka\filmupper\filmupperqt\VideoFrame.h(11): note: see reference to function template instantiation 'boost::multi_array<QColor *,2,std::allocator<T>> &boost::multi_array<T,2,std::allocator<T>>::resize(const boost::detail::multi_array::extent_gen<2> &)' being compiled
          with
          [
              T=QColor *
          ]
  d:\studia\inzynierka\filmupper\filmupperqt\VideoFrame.h(17): note: see reference to class template instantiation 'boost::multi_array<QColor *,2,std::allocator<T>>' being compiled
          with
          [
              T=QColor *
          ]
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\algorithm(1066): warning C4996: 'std::transform::_Unchecked_iterators::_Deprecate': Call to 'std::transform' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\algorithm(1064): note: see declaration of 'std::transform::_Unchecked_iterators::_Deprecate'
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2372): warning C4996: 'std::copy::_Unchecked_iterators::_Deprecate': Call to 'std::copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2372): note: see declaration of 'std::copy::_Unchecked_iterators::_Deprecate'
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost/multi_array/view.hpp(318): note: see reference to function template instantiation '_OutIt std::copy<boost::detail::multi_array::array_iterator<T,const T *,boost::mpl::size_t<2>,boost::detail::multi_array::const_sub_array<T,1,const T *>,boost::iterators::random_access_traversal_tag>,boost::detail::multi_array::array_iterator<T,T *,boost::mpl::size_t<2>,boost::detail::multi_array::sub_array<T,1>,boost::detail::multi_array::mutable_iterator_tag>>(_InIt,_InIt,_OutIt)' being compiled
          with
          [
              _OutIt=boost::detail::multi_array::array_iterator<QColor *,QColor **,boost::mpl::size_t<2>,boost::detail::multi_array::sub_array<QColor *,1>,boost::detail::multi_array::mutable_iterator_tag>,
              T=QColor *,
              _InIt=boost::detail::multi_array::array_iterator<QColor *,QColor *const *,boost::mpl::size_t<2>,boost::detail::multi_array::const_sub_array<QColor *,1,QColor *const *>,boost::iterators::random_access_traversal_tag>
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost/multi_array/view.hpp(310): note: while compiling class template member function 'boost::detail::multi_array::multi_array_view<T,2> &boost::detail::multi_array::multi_array_view<T,2>::operator =(const boost::detail::multi_array::multi_array_view<T,2> &)'
          with
          [
              T=QColor *
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost\multi_array.hpp(447): note: see reference to function template instantiation 'boost::detail::multi_array::multi_array_view<T,2> &boost::detail::multi_array::multi_array_view<T,2>::operator =(const boost::detail::multi_array::multi_array_view<T,2> &)' being compiled
          with
          [
              T=QColor *
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost\multi_array.hpp(406): note: see reference to class template instantiation 'boost::detail::multi_array::multi_array_view<T,2>' being compiled
          with
          [
              T=QColor *
          ]
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\algorithm(959): warning C4996: 'std::transform::_Unchecked_iterators::_Deprecate': Call to 'std::transform' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\algorithm(959): note: see declaration of 'std::transform::_Unchecked_iterators::_Deprecate'
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost/multi_array/multi_array_ref.hpp(371): note: see reference to function template instantiation '_OutIt *std::transform<const boost::detail::multi_array::extent_range<boost::detail::multi_array::extent_gen<NumRanges>::index,boost::detail::multi_array::extent_gen<NumRanges>::std::size_type>*,__int64*,boost::const_mem_fun_ref_t<__int64,boost::detail::multi_array::extent_range<boost::detail::multi_array::extent_gen<NumRanges>::index,boost::detail::multi_array::extent_gen<NumRanges>::std::size_type>>>(_InIt,_InIt,_OutIt,_Fn1)' being compiled
          with
          [
              _OutIt=__int64 *,
              _InIt=const boost::detail::multi_array::extent_range<boost::detail::multi_array::extent_gen<NumRanges>::index,boost::detail::multi_array::extent_gen<NumRanges>::std::size_type> *,
              _Fn1=boost::const_mem_fun_ref_t<__int64,boost::detail::multi_array::extent_range<boost::detail::multi_array::extent_gen<NumRanges>::index,boost::detail::multi_array::extent_gen<NumRanges>::std::size_type>>
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost/multi_array/multi_array_ref.hpp(364): note: while compiling class template member function 'void boost::const_multi_array_ref<T,2,T *>::init_from_extent_gen(const boost::detail::multi_array::extent_gen<2> &)'
          with
          [
              T=QColor *
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost/multi_array/multi_array_ref.hpp(124): note: see reference to function template instantiation 'void boost::const_multi_array_ref<T,2,T *>::init_from_extent_gen(const boost::detail::multi_array::extent_gen<2> &)' being compiled
          with
          [
              T=QColor *
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost/multi_array/multi_array_ref.hpp(414): note: see reference to class template instantiation 'boost::const_multi_array_ref<T,2,T *>' being compiled
          with
          [
              T=QColor *
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost\multi_array.hpp(113): note: see reference to class template instantiation 'boost::multi_array_ref<T,2>' being compiled
          with
          [
              T=QColor *
          ]
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2983): warning C4996: 'std::equal::_Unchecked_iterators::_Deprecate': Call to 'std::equal' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2983): note: see declaration of 'std::equal::_Unchecked_iterators::_Deprecate'
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(3008): note: see reference to function template instantiation 'bool std::equal<_InIt1,_InIt2,std::equal_to<void>>(_InIt1,_InIt1,_InIt2,_Pr)' being compiled
          with
          [
              _InIt1=const unsigned __int64 *,
              _InIt2=const unsigned __int64 *,
              _Pr=std::equal_to<void>
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost/multi_array/view.hpp(314): note: see reference to function template instantiation 'bool std::equal<const unsigned __int64*,const unsigned __int64*>(_InIt1,_InIt1,_InIt2)' being compiled
          with
          [
              _InIt1=const unsigned __int64 *,
              _InIt2=const unsigned __int64 *
          ]
  InterpolationFrameEnhancer.cpp
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\algorithm(1065): warning C4996: 'std::transform::_Unchecked_iterators::_Deprecate': Call to 'std::transform' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\algorithm(1064): note: see declaration of 'std::transform::_Unchecked_iterators::_Deprecate'
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost\multi_array.hpp(419): note: see reference to function template instantiation '_OutIt *std::transform<unsigned __int64*,unsigned __int64*,unsigned __int64*,const unsigned __int64&(__cdecl *)(const unsigned __int64 &,const unsigned __int64 &)>(_InIt1,_InIt1,_InIt2,_OutIt,_Fn2)' being compiled
          with
          [
              _OutIt=unsigned __int64 *,
              _InIt1=unsigned __int64 *,
              _InIt2=unsigned __int64 *,
              _Fn2=const unsigned __int64 &(__cdecl *)(const unsigned __int64 &,const unsigned __int64 &)
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost\multi_array.hpp(402): note: while compiling class template member function 'boost::multi_array<QColor *,2,std::allocator<T>> &boost::multi_array<T,2,std::allocator<T>>::resize(const boost::detail::multi_array::extent_gen<2> &)'
          with
          [
              T=QColor *
          ]
  d:\studia\inzynierka\filmupper\filmupperqt\VideoFrame.h(11): note: see reference to function template instantiation 'boost::multi_array<QColor *,2,std::allocator<T>> &boost::multi_array<T,2,std::allocator<T>>::resize(const boost::detail::multi_array::extent_gen<2> &)' being compiled
          with
          [
              T=QColor *
          ]
  d:\studia\inzynierka\filmupper\filmupperqt\VideoFrame.h(17): note: see reference to class template instantiation 'boost::multi_array<QColor *,2,std::allocator<T>>' being compiled
          with
          [
              T=QColor *
          ]
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\algorithm(1066): warning C4996: 'std::transform::_Unchecked_iterators::_Deprecate': Call to 'std::transform' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\algorithm(1064): note: see declaration of 'std::transform::_Unchecked_iterators::_Deprecate'
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2372): warning C4996: 'std::copy::_Unchecked_iterators::_Deprecate': Call to 'std::copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2372): note: see declaration of 'std::copy::_Unchecked_iterators::_Deprecate'
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost/multi_array/view.hpp(318): note: see reference to function template instantiation '_OutIt std::copy<boost::detail::multi_array::array_iterator<T,const T *,boost::mpl::size_t<2>,boost::detail::multi_array::const_sub_array<T,1,const T *>,boost::iterators::random_access_traversal_tag>,boost::detail::multi_array::array_iterator<T,T *,boost::mpl::size_t<2>,boost::detail::multi_array::sub_array<T,1>,boost::detail::multi_array::mutable_iterator_tag>>(_InIt,_InIt,_OutIt)' being compiled
          with
          [
              _OutIt=boost::detail::multi_array::array_iterator<QColor *,QColor **,boost::mpl::size_t<2>,boost::detail::multi_array::sub_array<QColor *,1>,boost::detail::multi_array::mutable_iterator_tag>,
              T=QColor *,
              _InIt=boost::detail::multi_array::array_iterator<QColor *,QColor *const *,boost::mpl::size_t<2>,boost::detail::multi_array::const_sub_array<QColor *,1,QColor *const *>,boost::iterators::random_access_traversal_tag>
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost/multi_array/view.hpp(310): note: while compiling class template member function 'boost::detail::multi_array::multi_array_view<T,2> &boost::detail::multi_array::multi_array_view<T,2>::operator =(const boost::detail::multi_array::multi_array_view<T,2> &)'
          with
          [
              T=QColor *
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost\multi_array.hpp(447): note: see reference to function template instantiation 'boost::detail::multi_array::multi_array_view<T,2> &boost::detail::multi_array::multi_array_view<T,2>::operator =(const boost::detail::multi_array::multi_array_view<T,2> &)' being compiled
          with
          [
              T=QColor *
          ]
  InterpolationFrameEnhancer.cpp(25): note: see reference to class template instantiation 'boost::detail::multi_array::multi_array_view<T,2>' being compiled
          with
          [
              T=QColor *
          ]
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\algorithm(959): warning C4996: 'std::transform::_Unchecked_iterators::_Deprecate': Call to 'std::transform' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\algorithm(959): note: see declaration of 'std::transform::_Unchecked_iterators::_Deprecate'
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost/multi_array/multi_array_ref.hpp(371): note: see reference to function template instantiation '_OutIt *std::transform<const boost::detail::multi_array::extent_range<boost::detail::multi_array::extent_gen<NumRanges>::index,boost::detail::multi_array::extent_gen<NumRanges>::std::size_type>*,__int64*,boost::const_mem_fun_ref_t<__int64,boost::detail::multi_array::extent_range<boost::detail::multi_array::extent_gen<NumRanges>::index,boost::detail::multi_array::extent_gen<NumRanges>::std::size_type>>>(_InIt,_InIt,_OutIt,_Fn1)' being compiled
          with
          [
              _OutIt=__int64 *,
              _InIt=const boost::detail::multi_array::extent_range<boost::detail::multi_array::extent_gen<NumRanges>::index,boost::detail::multi_array::extent_gen<NumRanges>::std::size_type> *,
              _Fn1=boost::const_mem_fun_ref_t<__int64,boost::detail::multi_array::extent_range<boost::detail::multi_array::extent_gen<NumRanges>::index,boost::detail::multi_array::extent_gen<NumRanges>::std::size_type>>
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost/multi_array/multi_array_ref.hpp(364): note: while compiling class template member function 'void boost::const_multi_array_ref<T,2,T *>::init_from_extent_gen(const boost::detail::multi_array::extent_gen<2> &)'
          with
          [
              T=QColor *
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost/multi_array/multi_array_ref.hpp(124): note: see reference to function template instantiation 'void boost::const_multi_array_ref<T,2,T *>::init_from_extent_gen(const boost::detail::multi_array::extent_gen<2> &)' being compiled
          with
          [
              T=QColor *
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost/multi_array/multi_array_ref.hpp(414): note: see reference to class template instantiation 'boost::const_multi_array_ref<T,2,T *>' being compiled
          with
          [
              T=QColor *
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost\multi_array.hpp(113): note: see reference to class template instantiation 'boost::multi_array_ref<T,2>' being compiled
          with
          [
              T=QColor *
          ]
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2983): warning C4996: 'std::equal::_Unchecked_iterators::_Deprecate': Call to 'std::equal' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(2983): note: see declaration of 'std::equal::_Unchecked_iterators::_Deprecate'
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xutility(3008): note: see reference to function template instantiation 'bool std::equal<_InIt1,_InIt2,std::equal_to<void>>(_InIt1,_InIt1,_InIt2,_Pr)' being compiled
          with
          [
              _InIt1=const unsigned __int64 *,
              _InIt2=const unsigned __int64 *,
              _Pr=std::equal_to<void>
          ]
  D:\Studia\Inzynierka\FilmUpper\packages\boost.1.65.1.0\lib\native\include\boost/multi_array/view.hpp(314): note: see reference to function template instantiation 'bool std::equal<const unsigned __int64*,const unsigned __int64*>(_InIt1,_InIt1,_InIt2)' being compiled
          with
          [
              _InIt1=const unsigned __int64 *,
              _InIt2=const unsigned __int64 *
          ]
  Generating Code...
  FilmUpperQt.vcxproj -> D:\Studia\Inzynierka\FilmUpper\x64\Debug\FilmUpperQt.exe
  FilmUpperQt.vcxproj -> D:\Studia\Inzynierka\FilmUpper\x64\Debug\FilmUpperQt.pdb (Full PDB)
